from dotenv import load_dotenv
load_dotenv() # Loading all the environment variables from.env file

import streamlit as st
import os
import google.generativeai as genai


genai.configure(api_key=os.getenv("GOOGLE_API_KEY"))

# Function to load the Gemini Pro Model to generate responses
model = genai.GenerativeModel("gemini-pro")

chat = model.start_chat(history=[])

def get_gemini_response(question):
    """
        This function sends a question to the Gemini Pro model and returns the response.

        Parameters:
        question (str): The question to be sent to the Gemini Pro model.

        Returns:
        response (str): The response generated by the Gemini Pro model.

        Example:
        >>> get_gemini_response("What is the capital of France?")
        "The capital of France is Paris."
    """
    response = chat.send_message(question, stream=True)
    return response

st.set_page_config(page_title='Question and Answer Chatbot')

# Initialize sessopn state for chat history if it doesn't exist
if 'chat_history' not in st.session_state:
    st.session_state['chat_history']= []

input = st.text_input("Input: ", key="input")
submit = st.button("Ask a question!")

if submit and input:
    response = get_gemini_response(input)

    # Add user query and response to session chat history
    
    
    st.session_state['chat_history'].append(("You: ",input))
    st.subheader("Generate Response is ")
    for chunk in response:
        st.write(chunk.text)
        st.session_state['chat_history'].append(("AI: ", chunk.text))
    
st.subheader("Chat History!!")
for role, text in st.session_state['chat_history']:
    st.write(f"{role}: {text}")

